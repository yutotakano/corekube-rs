use super::*;

#[test]
fn test_setup_request() {
    let mut config = config::CoreKubeConfig::default();
    config.amf_name = "open5gs-amf0".to_string();

    let ngap_input_bytes: [u8; 57] = [
        0x00, 0x15, 0x00, 0x35, 0x00, 0x00, 0x04, 0x00, 0x1b, 0x00, 0x08, 0x00, 0x02, 0xf8, 0x39,
        0x03, 0x80, 0x00, 0x04, 0x00, 0x52, 0x40, 0x09, 0x03, 0x00, 0x4e, 0x65, 0x72, 0x76, 0x69,
        0x6f, 0x6e, 0x00, 0x66, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 0xf8, 0x39,
        0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x01, 0x00, 0x15, 0x40, 0x01, 0x40,
    ];

    let result = ngap_handler_entrypoint(&config, &ngap_input_bytes);
    assert_eq!(result.len(), 1);

    assert_eq!(result[0].sctp_stream, 0x00);

    let ngap_expected_bytes: [u8; 54] = [
        0x20, 0x15, 0x00, 0x32, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x0e, 0x05, 0x80, 0x6f, 0x70,
        0x65, 0x6e, 0x35, 0x67, 0x73, 0x2d, 0x61, 0x6d, 0x66, 0x30, 0x00, 0x60, 0x00, 0x08, 0x00,
        0x00, 0x02, 0xf8, 0x39, 0x02, 0x00, 0x40, 0x00, 0x56, 0x40, 0x01, 0xff, 0x00, 0x50, 0x00,
        0x08, 0x00, 0x02, 0xf8, 0x39, 0x00, 0x00, 0x00, 0x08,
    ];

    assert_eq!(result[0].buf, ngap_expected_bytes.to_vec());
}

// #[test]
// fn test_initial_ue_message() {
//     let mut config = config::CoreKubeConfig::default();
//     config.amf_name = "open5gs-amf0".to_string();

//     let ngap_input_bytes: [u8; 86] = [
//         0x00, 0x0f, 0x40, 0x52, 0x00, 0x00, 0x05, 0x00, 0x55, 0x00, 0x03, 0x40, 0x00, 0x01, 0x00,
//         0x26, 0x00, 0x27, 0x26, 0x7e, 0x00, 0x41, 0x79, 0x00, 0x0d, 0x01, 0x02, 0xf8, 0x39, 0x00,
//         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x01, 0x00, 0x2e, 0x04, 0x80, 0xa0,
//         0x80, 0xa0, 0x2f, 0x05, 0x04, 0x01, 0x00, 0x00, 0x01, 0x53, 0x01, 0x00, 0x00, 0x79, 0x00,
//         0x0f, 0x40, 0x02, 0xf8, 0x39, 0x00, 0xe0, 0x00, 0x01, 0x00, 0x02, 0xf8, 0x39, 0x00, 0x00,
//         0x01, 0x00, 0x5a, 0x40, 0x01, 0x10, 0x00, 0x70, 0x40, 0x01, 0x00,
//     ];

//     let result = ngap_handler_entrypoint(&config, &ngap_input_bytes);
//     assert_eq!(result.len(), 1);
// }
